plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
}

//archivesBaseName = project.archives_base_name
version = project.minecraft_version + "-" + project.mod_version
group = project.maven_group

repositories {
	maven { name="BuildCraft"; url="https://mod-buildcraft.com/maven" }
	maven { url "https://maven.shedaniel.me/" }
	maven { url 'https://jitpack.io' }
	maven { url "https://maven.terraformersmc.com/releases" }
	maven { url "https://maven.pitan76.net" }
	mavenLocal()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modApi "alexiil.mc.lib:libblockattributes-all:$libblockattributes_version"
	modApi "alexiil.mc.lib:libnetworkstack-base:$libnetworkstack_version"
	modApi "alexiil.mc.lib:libmultipart-base:$libmultipart_version"

	include "alexiil.mc.lib:libblockattributes-all:$libblockattributes_version"
	include "alexiil.mc.lib:libnetworkstack-base:$libnetworkstack_version"
	include "alexiil.mc.lib:libmultipart-base:$libmultipart_version"

	// Cloth Config APIとなぜか相性が悪い？w
	// REI
	//modCompileOnly "me.shedaniel:RoughlyEnoughItems-api:$rei_version"
	//modImplementation "me.shedaniel:RoughlyEnoughItems-fabric:$rei_version"

	modImplementation "alexiil.mc.mod:simplepipes-all:0.10.0"

	modImplementation "ml.pkom:mcpitanlibarch-fabric${rootProject.mcpitanlib_version}"

	// Mod Menu
	// 1.16 => 1.16.19
	// 1.17 => 2.0.12
	modImplementation "com.terraformersmc:modmenu:6.1.0-rc.4"
	// Cloth Config API
	// 1.16 => 4.11.26
	// 1.17 => 5.0.38
	modApi("me.shedaniel.cloth:cloth-config-fabric:10.0.96") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	include "me.shedaniel.cloth:cloth-config-fabric:10.0.96"

	//modImplementation "me.sargunvohra.mcmods:autoconfig1u:3.4.0"
	//include "me.sargunvohra.mcmods:autoconfig1u:3.4.0"
}

processResources {
	inputs.property "version", project.version
	filteringCharset "UTF-8"

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"
	if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
		it.options.release = targetJavaVersion
	}
}

java {
	def javaVersion = JavaVersion.toVersion(targetJavaVersion)
	if (JavaVersion.current() < javaVersion) {
		toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
	}
	archivesBaseName = project.archives_base_name
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
